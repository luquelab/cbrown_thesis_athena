{"0": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": " ",
    "url": "/1_introduction/",
    "relUrl": "/1_introduction/"
  },"1": {
    "doc": "Introduction",
    "title": "HK-97 Folds",
    "content": "Of the many protein folds available to Viral Capsids, the HK97 fold is one of the most versatile. Capsids using the fold have been identified ranging from a T number of 1(Thermotoga Maritima) to 52 (Jumbo Phage G. They vary not only in T #, but also in their choice of underlying lattice, with the Herpesvirus capsids exhibiting a Trihexagonal Design. They also incorporate a variety of different reinforcement proteins that decorate their surface. ",
    "url": "/1_introduction/#hk-97-folds",
    "relUrl": "/1_introduction/#hk-97-folds"
  },"2": {
    "doc": "Methods",
    "title": "2. Methods",
    "content": " ",
    "url": "/2_methods/#2-methods",
    "relUrl": "/2_methods/#2-methods"
  },"3": {
    "doc": "Methods",
    "title": "2.1 Data Acquisition",
    "content": "All atomic models are acquire in PDB format and are, with few exceptions, acquired from the RCSB Protein Databank. ",
    "url": "/2_methods/#21-data-acquisition",
    "relUrl": "/2_methods/#21-data-acquisition"
  },"4": {
    "doc": "Methods",
    "title": "2.2 Augmenting The Classification Scheme",
    "content": "The ambiguities of the geometrical method prompts us to include additional assumptions that encode structural properties of the capsid. Here we propose that the classification scheme be augmented with the following assumption. Assumption: Capsomers correspond to quasi rigid domains of a viral capsid . Here we use the same definition of a quasi rigid domain as described in [ref]. A rigid structures is a structure in which the distances between elements of the structure are fixed over time and under transformations in space. A quasi-rigid structure is thus a structure where the fluctuations between elements of the structure are minimized. We calculate the pairwise distance fluctuation of a structure in the following manner. \\[\\begin{equation} f^{2}_{ij} = Var(d^{2}_{ij}) = \\langle d^{2}_{ij} \\rangle - \\langle d_{ij} \\rangle ^{2} \\end{equation}\\] A quasi rigid domain of a protein structure is a domain of the protein which satisfied our definition of a quasi rigid structure. ",
    "url": "/2_methods/#22-augmenting-the-classification-scheme",
    "relUrl": "/2_methods/#22-augmenting-the-classification-scheme"
  },"5": {
    "doc": "Methods",
    "title": "2.3 Quasi-rigid Subunit Identification",
    "content": "2.3.1 Elastic Network Models . Among coarse grained models aimed at describing large scale molucular dynamics the most popular options are Elastic Network Models (ENM). Most elastic network models begin by coarse graining the system at the residue level by considering only the coordinates of the alpha carbon atoms in each residues. These are chosen as representative atoms for each residue, and are connected by springs to all other residues within a given cutoff distance. The potential of the Anisotropic Network Model takes the following form. \\[\\begin{equation} V(\\vec{x}) = \\frac{1}{2 \\sum_{i|i \\neq j} \\Gamma_{ij} (||\\vec{x}_i - \\vec{x}_j|| - ||\\vec{x}^0_i - \\vec{x}^0_j||) } \\end{equation}\\] where $\\Gamma$ is our spring connectivity matrix defined as follows. \\[\\begin{equation} \\Gamma_{ij} = \\biggr \\{ \\begin{array}{ll} \\gamma, &amp; R_{ij} \\leq r_c \\\\ 0, &amp; R_{ij} &gt; r_c \\end{array} \\end{equation}\\] \\[\\begin{equation} \\mathbf{H}_{ij} = \\frac{\\textbf{$\\Gamma$}_{ij}}{R_{ij}^2} \\vec{r}_{ij} \\otimes \\vec{r}_{ij} \\end{equation}\\] The diagonal blocks of our Hessian Matrix are also 3x3 matrices. \\[\\begin{equation} \\mathbf{H}_{ii} = - \\sum_{i|i \\neq j} \\mathbf{H}_{ij} \\end{equation}\\] | | . | Figure 1: A representation of an Elastic Network Model using the example pdb 2e0z. | . 2.3.2 Normal Mode Analysis . We are interested in the large scale dynamics of the capsid near equilibrium. This prompts us to make use of a technique called Normal Mode Analysis. Normal Mode Analysis is a technique aimed towards describing the equilibrium dynamics of a physical system. It aims to approximate the way the system fluctuates around the equilibrium by assuming oscillatory behavior and considering only a subset of the normal modes of the system. The assumptions necessary to allow this technique are that the system has a specific equilibrium configuration and that all particles in the system interact under a simple harmonic potential. This assumption is taken to be accurate only locally. The further the system strays from the equilibrium the less accurate this technique will be. The method disregards any specific interactions and constraints in the system. As a result it describes only macroscopic motions of the system and will fail to represent complex bonds within a protein. This means it is best paired with a model that also doesnâ€™t concern itself with microscopic forces and constraints. It also suggests that the technique is best applied to systems large enough that collective motions are dominant. The mathematical formulation of NMA begins by examining a taylor series of the potential about the equilibrium. \\[\\begin{equation} V(\\vec{x}) = V(\\vec{x^0}) + \\sum_{i}\\Delta x_i \\frac{\\partial V}{\\partial x_i }\\biggr|_{x=x^0} + \\sum_{i,j}\\Delta x_i \\Delta x_j \\frac{\\partial^2 V}{\\partial x_i \\partial x_j }\\biggr|_{x=x^0} + \\dots \\end{equation}\\] The first and second terms of this expansion are zero in any equilibrium conformation. Truncating the remaining terms gives us our second order expansion of our potential about the equilibrium. The matrix of second derivatives of our potential around the equilibrium is called the Hessian Matrix. \\[\\begin{equation} H_{ij} = (\\frac{\\partial^2 V}{\\partial x_i \\partial x_j})^0 \\end{equation}\\] Our equation of motion may be written using the Hessian as follows: . \\[\\begin{equation} \\boldsymbol{M} \\frac{d^2 \\Delta \\vec{x}}{dt^2} + \\boldsymbol{H} \\Delta \\vec{x} = 0 \\end{equation}\\] Where the matrix M is a mass matrix, which in our case is the identity matrix and can be ignored. The normal modes of the system are thus solutions to the following eigenvalue problem. \\[\\begin{equation} \\boldsymbol{H} \\vec{v_k} = \\omega^2 \\vec{v_k} \\end{equation}\\] We . 2.3.3 Spectral Clustering . Now that we have determined the pairwise distance fluctuations between the residues of the capsid we need to determine an optimal subdivision, or clustering, of the system. There exist many algorithms to identify optimal clusterings of data. One of the most effective algorithms used when dealing with large, sparsely connected systems is Spectral Clustering. This method requires us to first transform our measure of dissimilarity, distance fluctuations, into a measure of similarity. \\[\\begin{equation} S_{i,j} = e^{-D_{i,j}^2 / 2 \\bar{D}^2} \\end{equation}\\] We can use the nature of connectivity in our model to simplify our similarity matrix by setting the similarity of unconnected residues to zero. Spectral embedding is a technique based on graph theory, and thus requires as an input a Laplacian Matrix. We can transform our similarity matrix into a Laplacian matrix, specifically the Symmetric Normalized Laplacian, with the following identity. \\[\\begin{equation} \\mathbf{L} = \\mathbf{I} - \\mathbf{D}^{-1/2} \\mathbf{S} \\mathbf{D}^{-1/2} \\end{equation}\\] Spectral Embedding . The eigenvectors of this graph now represent a new set of points in a higher dimensional space that can be clustered using a simpler method such as the k-means algorithm. Clustering Embedded Points . 2.3.4 Scoring &amp; Selection . ",
    "url": "/2_methods/#23-quasi-rigid-subunit-identification",
    "relUrl": "/2_methods/#23-quasi-rigid-subunit-identification"
  },"6": {
    "doc": "Methods",
    "title": "2.4 Classification &amp; Visualization",
    "content": " ",
    "url": "/2_methods/#24-classification--visualization",
    "relUrl": "/2_methods/#24-classification--visualization"
  },"7": {
    "doc": "Methods",
    "title": "Extra",
    "content": "Symmetry Reduction Of Matrices . Knowing the icosahedral rotation matrices ahead of time can allow us to simplify the memory requirements using icosahedral symmetry. If we have our points labeled by which asymmetric unit they belong to and their position within that asymmetric unit we can calculate the distance vector between points using the following equation. \\[\\begin{equation} \\textbf{r}_{ij,kl} = I_k \\textbf{x}_{i} - I_l \\textbf{x}_{j} \\end{equation}\\] A property of symmetry groups is that products of group actions yield another member of the group. We can use this fact to express distance vectors between members of the asymmetric unit copies in terms of the distance vectors between the base unit and all others because of the following relations. \\[\\begin{equation} I_k^{-1} \\textbf{r}_{ij,kl} = I_k^{-1} I_k \\textbf{x}_{i} - I_k^{-1} I_l \\textbf{x}_{j} = \\textbf{x}_{i} - I_m \\textbf{x}_{j} = \\textbf{r}_{ij,0m} \\end{equation}\\] \\[\\begin{equation} \\textbf{r}_{ij,kl} = I_k \\textbf{r}_{ij,0m} \\end{equation}\\] Here $I_m$ is a solution to the following equation: . \\(\\begin{equation} \\textbf{I}_m = \\textbf{I}_k^{-1} \\textbf{I}_l \\end{equation}\\) We calculate the solutions to eq. 4 ahead of time using the group table calculated from the rotation matrices. The Distance matrix can be reduced without having to apply a rotation. This also applies to the connectivity matrix since it depends solely upon distance. \\[\\begin{equation} \\textbf{D}_{ij,kl} = \\textbf{D}_{ij,0m} \\end{equation}\\] The Hessian Matrix is calculated using the outer product of the distance vectors. \\[\\begin{equation} H_{ij,kl} = \\frac{\\textbf{$\\Gamma$}_{ij,kl}}{\\textbf{D}_{ij,kl}} \\textbf{r}_{ij,kl} \\otimes \\textbf{r}_{ij,kl} \\end{equation}\\] The outer product between two vectors expressed using equation (3) yields: . \\[\\begin{equation} \\textbf{r}_{ij,kl} \\otimes \\textbf{r}_{ij,kl} = I_k \\textbf{r}_{ij,0m} \\otimes \\textbf{r}_{ij,0m} I_k^{-1} \\end{equation}\\] Since all of the matrices in equation (6) can be reduced this way the final reduction for the hessian is: . \\[\\begin{equation} \\textbf{H}_{ij,kl} = I_k \\textbf{H}_{ij,0m} I_k^{-1} \\end{equation}\\] ",
    "url": "/2_methods/#extra",
    "relUrl": "/2_methods/#extra"
  },"8": {
    "doc": "Methods",
    "title": "Methods",
    "content": " ",
    "url": "/2_methods/",
    "relUrl": "/2_methods/"
  },"9": {
    "doc": "Subdivisions",
    "title": "Subdivisions",
    "content": " ",
    "url": "/4_output/Subdivisions/",
    "relUrl": "/4_output/Subdivisions/"
  },"10": {
    "doc": "Subdivisions",
    "title": "Snapshots",
    "content": "1a34 . 2e0z . 3dkt . 3j7v . 5uu5 . 6nj8 . 6xgq . ",
    "url": "/4_output/Subdivisions/#snapshots",
    "relUrl": "/4_output/Subdivisions/#snapshots"
  },"11": {
    "doc": "Subdivisions",
    "title": "PDBs",
    "content": "2e0z_32_domains.pdb . 3dkt_60_domains.pdb . 3J4U_210_domains.pdb . ",
    "url": "/4_output/Subdivisions/#pdbs",
    "relUrl": "/4_output/Subdivisions/#pdbs"
  },"12": {
    "doc": "Plots",
    "title": "Plots",
    "content": " ",
    "url": "/4_output/Plots/",
    "relUrl": "/4_output/Plots/"
  },"13": {
    "doc": "Plots",
    "title": "1a34",
    "content": ". ",
    "url": "/4_output/Plots/#1a34",
    "relUrl": "/4_output/Plots/#1a34"
  },"14": {
    "doc": "Plots",
    "title": "2e0z",
    "content": ". ",
    "url": "/4_output/Plots/#2e0z",
    "relUrl": "/4_output/Plots/#2e0z"
  },"15": {
    "doc": "Plots",
    "title": "3dkt",
    "content": ". ",
    "url": "/4_output/Plots/#3dkt",
    "relUrl": "/4_output/Plots/#3dkt"
  },"16": {
    "doc": "Plots",
    "title": "3j0b",
    "content": ". ",
    "url": "/4_output/Plots/#3j0b",
    "relUrl": "/4_output/Plots/#3j0b"
  },"17": {
    "doc": "Plots",
    "title": "3J4U",
    "content": ". ",
    "url": "/4_output/Plots/#3j4u",
    "relUrl": "/4_output/Plots/#3j4u"
  },"18": {
    "doc": "Plots",
    "title": "3j7v",
    "content": ". ",
    "url": "/4_output/Plots/#3j7v",
    "relUrl": "/4_output/Plots/#3j7v"
  },"19": {
    "doc": "Plots",
    "title": "5uu5",
    "content": ". ",
    "url": "/4_output/Plots/#5uu5",
    "relUrl": "/4_output/Plots/#5uu5"
  },"20": {
    "doc": "Plots",
    "title": "6nj8",
    "content": ". ",
    "url": "/4_output/Plots/#6nj8",
    "relUrl": "/4_output/Plots/#6nj8"
  },"21": {
    "doc": "Output",
    "title": "Output",
    "content": "This contains the finalized PDB files, plots, snapshots, and presentations Iâ€™ve given to share my results. Files are formatted as follows: . ",
    "url": "/4_output/",
    "relUrl": "/4_output/"
  },"22": {
    "doc": "Output",
    "title": "PDBs",
    "content": "Files named: â€˜[pdb_id]_[n]_domains.pdbâ€™ contain the results of the Domain Subdivision for n domains. The labels of the domains are assigned to the b-factor values of the pdb for convenient visualization. ",
    "url": "/4_output/#pdbs",
    "relUrl": "/4_output/#pdbs"
  },"23": {
    "doc": "Output",
    "title": "Plots",
    "content": "Files named: â€˜[pdb_id]_[n]_domains.pngâ€™ are plots of the scores of each attempted subdivision for each pdb id. The n in this case will be that of the highest scoring subdivision. ",
    "url": "/4_output/#plots",
    "relUrl": "/4_output/#plots"
  },"24": {
    "doc": "Output",
    "title": "Final Clustering",
    "content": "Files named: â€˜[pdb_id]_[n]_domains_optimal.pngâ€™ are snapshots of the highest scoring subdivision of the pdb visualized in ChimeraX. An Icosahedral structure is overlaid to indicate the choice of subdivision. The ChimeraX sessions used to create these screenshots are saved under Subdivisions/Sessions with the format: â€˜[pdb_id]_[n]_domains.cxsâ€™ . ",
    "url": "/4_output/#final-clustering",
    "relUrl": "/4_output/#final-clustering"
  },"25": {
    "doc": "Output",
    "title": "Summary Of HK97 Results",
    "content": " ",
    "url": "/4_output/#summary-of-hk97-results",
    "relUrl": "/4_output/#summary-of-hk97-results"
  },"26": {
    "doc": "Discussion",
    "title": "Discussion",
    "content": " ",
    "url": "/3_discussion/",
    "relUrl": "/3_discussion/"
  },"27": {
    "doc": "Impact",
    "title": "Impact",
    "content": " ",
    "url": "/5_impact/",
    "relUrl": "/5_impact/"
  },"28": {
    "doc": "Impact",
    "title": "Classification results",
    "content": " ",
    "url": "/5_impact/#classification-results",
    "relUrl": "/5_impact/#classification-results"
  },"29": {
    "doc": "Impact",
    "title": "Program Impacts",
    "content": " ",
    "url": "/5_impact/#program-impacts",
    "relUrl": "/5_impact/#program-impacts"
  },"30": {
    "doc": "Home",
    "title": "Home (TESTING) TEstin 2.0",
    "content": "My name is Colin Brown, an MS student in Physics at San Diego State University. This page contains a record of my contributions to Luque Lab and the ongoing development of my Masterâ€™s Thesis. I primarily analyze the structural and geometric properties of viral capsids with coarse grained physical models. ",
    "url": "/#home-testing-testin-20",
    "relUrl": "/#home-testing-testin-20"
  },"31": {
    "doc": "Home",
    "title": "Ongoing Projects",
    "content": " ",
    "url": "/#ongoing-projects",
    "relUrl": "/#ongoing-projects"
  },"32": {
    "doc": "Home",
    "title": "Classifying Viral Capsids via Quasi-Rigid Domain Decomposition",
    "content": ". I am developing a tool based on the work in Ponzoni &amp; Polles 2015 that uses Normal Mode Analysis and Elastic Network Models to decompose a protein structure into its quasi-rigid subunits. I am applying this tool to capsids and using the results to assist in the classification of capsids using the scheme described in Twarock &amp; Luque(2019). The details of this method are included in Chapter 4 of my thesis and the project is located in a Github Repository. ",
    "url": "/#classifying-viral-capsids-via-quasi-rigid-domain-decomposition",
    "relUrl": "/#classifying-viral-capsids-via-quasi-rigid-domain-decomposition"
  },"33": {
    "doc": "Home",
    "title": "Catalogue Of Capsid Classifications",
    "content": ". I am part of a group effort in Luque Lab to create a catalogue of classifications of Viral Capsids based on their geometry. This project is ongoing at this Github Repository. ",
    "url": "/#catalogue-of-capsid-classifications",
    "relUrl": "/#catalogue-of-capsid-classifications"
  },"34": {
    "doc": "Home",
    "title": "Completed Projects",
    "content": " ",
    "url": "/#completed-projects",
    "relUrl": "/#completed-projects"
  },"35": {
    "doc": "Home",
    "title": "ChimeraX hkcage",
    "content": ". I developed a tool for the free molecular visualization software ChimeraX. The tool was an extension of the â€˜hkcageâ€™ tool already present in ChimeraX to generate Geodesic &amp; Goldberg Polyhedra to a set of new geometries described in Twarock &amp; Luque(2019). This tool is now part of the official ChimeraX Toolshed. (ChimeraX Documentation.) The tool is also being developed and documented in a Github Repository. ",
    "url": "/#chimerax-hkcage",
    "relUrl": "/#chimerax-hkcage"
  },"36": {
    "doc": "Home",
    "title": "Coarse Grained Models Of Viral Capsids",
    "content": ". I created coarse grained toy models of capsids based on those used in Zandi &amp; Reguera 2004 for the purpose of comparing standard hexagonal capsid structures with trihexagonal capsid structures. ## . ",
    "url": "/#coarse-grained-models-of-viral-capsids",
    "relUrl": "/#coarse-grained-models-of-viral-capsids"
  },"37": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/",
    "relUrl": "/"
  }
}
